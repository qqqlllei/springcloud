server:
  port: 8080
spring:
  application:
    name: gataway-server
  http:
    multipart:
      location: d:/temp

  profiles:
    active: @profile-active@

  redis:
    host: 10.33.80.101
    port: 6379

  zipkin:
    kafka:
      topic: zipkin

  kafka:
    bootstrap-servers: 10.33.80.101:9092

  sleuth:
    sampler:
      percentage: 1.0

zuul:
  ribbon:
    eager-load:
      enabled: true
      clients: auth-server,user-server
  ignoredServices: '*'
  sensitive-headers: Cookie,Set-Cookie
  ratelimit:
    key-prefix: zuul-ratelimite
    enabled: true
    repository: redis
    default-policy-list:
      - limit: 10
        quota: 5
        refresh-interval: 5
        type:
          - user

  clients:
  - path: /user/**
    retryable: 1
    sensitiveHeadersList: ''
    serviceId: user-server
    stripPrefix: 1
    url: ''
  - path: /book/**
    retryable: 1
    sensitiveHeadersList: ''
    serviceId: book-server
    stripPrefix: 1
    url: ''
  - path: /auth/**
    retryable: 1
    sensitiveHeadersList: ''
    serviceId: auth-server
    stripPrefix: 1
    url: ''
  - path: /waiwei/**
    retryable: 1
    sensitiveHeadersList: ''
    serviceId: out_wechat
    stripPrefix: 1
    url: ''

management:
  security:
    enabled: false

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000


# 性能：API高可用，负载均衡，容错机制。
# 安全：权限身份认证、脱敏，流量清洗，后端签名（保证全链路可信调用）,黑名单（非法调用的限制）。
# 日志：日志记录（spainid,traceid）一旦涉及分布式，全链路跟踪必不可少。
# 缓存：数据缓存。
# 监控：记录请求响应数据，api耗时分析，性能监控。
# 限流：流量控制，错峰流控，目前有漏桶算法、令牌桶算法也可以定制限流规则。
# 灰度：线上灰度部署，可以减小风险。
# 路由：动态路由规则。
# 静态：代理




